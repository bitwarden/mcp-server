name: Release
run-name: ${{ inputs.release_type == 'Dry Run' && 'Release (Dry Run)' || 'Release' }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release options"
        required: true
        default: "Initial Release"
        type: choice
        options:
          - Initial Release
          - Dry Run

permissions:
  contents: read

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-24.04
    outputs:
      release_version: ${{ steps.version.outputs.version }}
    steps:
      - name: Check out repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Check branch
        if: ${{ inputs.release_type != 'Dry Run' }}
        run: |
          if [[ "$GITHUB_REF" != "refs/heads/main" ]]; then
            echo "==================================="
            echo "[!] Can only release from the 'main' branch"
            echo "==================================="
            exit 1
          fi

      - name: Check release version
        id: version
        uses: bitwarden/gh-actions/release-version-check@main
        with:
          release-type: ${{ inputs.release_type }}
          project-type: ts
          file: ./package.json

  release:
    name: Release
    runs-on: ubuntu-24.04
    needs: setup
    env:
      _PKG_VERSION: ${{ needs.setup.outputs.release_version }}
    permissions:
      contents: write
      packages: read
      actions: read

    steps:
      - name: Download all release artifacts
        if: ${{ inputs.release_type != 'Dry Run' }}
        uses: bitwarden/gh-actions/download-artifacts@main
        with:
          workflow: build.yml
          workflow_conclusion: success
          artifacts: "mcp-server-${{ env._PKG_VERSION }}.zip"
          branch: ${{ github.ref_name }}

      - name: Dry Run - Download all artifacts
        if: ${{ inputs.release_type == 'Dry Run' }}
        uses: bitwarden/gh-actions/download-artifacts@main
        with:
          workflow: build.yml
          workflow_conclusion: success
          artifacts: "mcp-server-${{ env._PKG_VERSION }}.zip"
          branch: main

      - name: Create release
        if: ${{ inputs.release_type != 'Dry Run' }}
        uses: ncipollo/release-action@bcfe5470707e8832e12347755757cec0eb3c22af # v1.18.0
        with:
          artifacts: "./mcp-server-${{ env._PKG_VERSION }}.zip"
          commit: ${{ github.sha }}
          tag: v${{ env._PKG_VERSION }}
          name: v${{ env._PKG_VERSION }}
          body: "<insert release notes here>"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true


  release-ghcr:
    name: Push Release to GHCR
    runs-on: ubuntu-24.04
    needs: setup
    env:
      _RELEASE_TAG: ${{ needs.setup.outputs.release_version }}
      _GH_REGISTRY: ghcr.io/bitwarden
      _PROJECT_NAME: mcp-server
    permissions:
      packages: write

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Dry Run - Pull Tag and Push to GHCR
        if: ${{ inputs.release_type == 'Dry Run' }}
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        env:
          IMAGE_TAG: dev
        with:
          context: .
          file: |
            "FROM ${{ env._GH_REGISTRY }}/${{ env._PROJECT_NAME }}:${{ env.IMAGE_TAG }}"
          platforms: linux/amd64
          push: false
          tags: "${{ env._GH_REGISTRY }}/${{ env._PROJECT_NAME }}:${{ env._RELEASE_TAG }}"

      - name: Pull Tag and Push to GHCR
        if: ${{ inputs.release_type != 'Dry Run' }}
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        env:
          IMAGE_TAG: dev
        with:
          context: .
          file: |
            "FROM ${{ env._GH_REGISTRY }}/${{ env._PROJECT_NAME }}:${{ env.IMAGE_TAG }}"
          platforms: linux/amd64
          push: false # TODO: set to true when ready to push
          tags: "${{ env._GH_REGISTRY }}/${{ env._PROJECT_NAME }}:${{ env._RELEASE_TAG }}"

      - name: Log out of Docker
        run: |
          docker logout ghcr.io
