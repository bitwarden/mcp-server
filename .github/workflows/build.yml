name: Build

on:
  pull_request:
  push:
    branches:
      - "main"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      security-events: write
      packages: write
    env:
      _IMAGE_NAME: ghcr.io/bitwarden/mcp-server

    steps:
      - name: Check out repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get package version
        id: retrieve-package-version
        run: |
          PKG_VERSION=$(jq -r .version package.json)
          echo "package_version=$PKG_VERSION" >> $GITHUB_OUTPUT

      - name: Get Node version
        id: retrieve-node-version
        run: |
          NODE_NVMRC=$(cat .nvmrc)
          NODE_VERSION=${NODE_NVMRC/v/''}
          echo "node_version=$NODE_VERSION" >> $GITHUB_OUTPUT

      - name: Set up Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          node-version: ${{ steps.retrieve-node-version.outputs.node_version }}

      - name: Install Node dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Archive
        run: |
          zip -r mcp-server-${{ steps.retrieve-package-version.outputs.package_version }}.zip dist

      - name: Upload archive to GitHub
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: mcp-server-${{ steps.retrieve-package-version.outputs.package_version }}.zip
          path: mcp-server-${{ steps.retrieve-package-version.outputs.package_version }}.zip
          if-no-files-found: error

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Docker image tag
        id: tag
        env:
          EVENT_TYPE: ${{ contains(github.event_name, 'pull_request') && 'pull_request' || '' }}
        run: |
          if [[ "$EVENT_TYPE" == "pull_request" ]]; then
            IMAGE_TAG="pr-${{ github.event.pull_request.number }}"
          else
            IMAGE_TAG=$(echo "${GITHUB_REF:11}" | sed "s#/#-#g")  # slash safe branch name
            if [[ "$IMAGE_TAG" == "main" ]]; then
              IMAGE_TAG=dev
            fi
          fi
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Generate full image name
        id: image-name
        env:
          IMAGE_TAG: ${{ steps.tag.outputs.image_tag }}
        run: |
          if [[ "$IMAGE_TAG" == "dev" ]]; then
            echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
            echo "name=${{ env._IMAGE_NAME }}:${{ env.IMAGE_TAG }},${{ env._IMAGE_NAME }}:${{ env.IMAGE_TAG }}-${{ env.SHORT_SHA }}" >> $GITHUB_OUTPUT
          else
            echo "name=${{ env._IMAGE_NAME }}:${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker image
        id: build-docker
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          file: Dockerfile
          platforms: linux/amd64
          push: ${{ github.ref == 'ref/heads/main' }}
          tags: ${{ steps.image-name.outputs.name }}

      - name: Install Cosign
        if: ${{ github.ref == 'ref/heads/main' }}
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - name: Sign image with Cosign
        if: ${{ github.ref == 'ref/heads/main' }}
        id: cosign
        env:
          DIGEST: ${{ steps.build-docker.outputs.digest }}
          TAGS: ${{ steps.image-name.outputs.name }}
        run: |
          IFS="," read -a tags <<< "${TAGS}"
          images=""
          for tag in "${tags[@]}"; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}
          echo "images=${images}" >> $GITHUB_OUTPUT

      - name: Verify the signed image with Cosign
        if: ${{ github.ref == 'ref/heads/main' }}
        run: |
          cosign verify \
            --certificate-identity "${{ github.server_url }}/${{ github.workflow_ref }}" \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
            ${{ steps.cosign.outputs.images }}

      - name: Scan Docker image
        id: container-scan
        uses: anchore/scan-action@df395807f4554463d4455b8047cf58e37b6acaae # v6.5.0
        with:
          image: ${{ steps.image-name.outputs.name }}
          fail-build: false
          output-format: sarif

      - name: Upload Grype results to GitHub
        uses: github/codeql-action/upload-sarif@4e828ff8d448a8a6e532957b1811f387a63867e8 # v3.29.4
        with:
          sarif_file: ${{ steps.container-scan.outputs.sarif }}
          sha: ${{ contains(github.event_name, 'pull_request') && github.event.pull_request.head.sha || github.sha }}
          ref: ${{ contains(github.event_name, 'pull_request') && format('refs/pull/{0}/head', github.event.pull_request.number) || github.ref }}
